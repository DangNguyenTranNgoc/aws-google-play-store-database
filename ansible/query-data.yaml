- name: test
  hosts: localhost
  connection: local
  vars:
    mysql_host: localhost
    work_dir: lookup('ansible.builtin.env', 'HOME', default='/home/')
    time_log_file: "exec-time.txt"
  tasks:
    
    - name: Query 1
      shell: |
        mysql --defaults-extra-file="{{ work_dir }}/ansible/.my.cnf" \
              --local-infile=1 \
              -h "{{ mysql_host }}" \
              -D dep304_asm2 \
              -e "select a.Category, \
                  sum(r.Sentiment_Polarity) as SUM_Sentiment_Polarity, \
                  sum(r.Sentiment_Subjectivity) as SUM_Sentiment_Subjectivity \
                  from app a join review r \
                      on a.App = r.App \
                  group by a.Category;"
      register: mysql_output_1
    
    - name: Show result from query 1
      ansible.builtin.debug:
        msg: 
          - "Time to run: {{ mysql_output_1.delta }}"
          - "Output is: {{ mysql_output_1.stdout_lines }}"
    
    - name: Query 2
      shell: |
        mysql --defaults-extra-file="{{ work_dir }}/ansible/.my.cnf" \
              --local-infile=1 \
              -h "{{ mysql_host }}" \
              -D dep304_asm2 \
              -e "with negative as ( \
                      select a.Category, count(*) as negative_count \
                      from app a join review r on a.App = r.App \
                      where r.Sentiment = \"Negative\" \
                      group by a.Category \
                  ), \
                  positive as ( \
                      select a.Category, count(*) as positive_count \
                      from app a join review r on a.App = r.App \
                      where r.Sentiment = \"Positive\" \
                      group by a.Category \
                  ), \
                  neutral as ( \
                      select a.Category, count(*) as neutral_count \
                      from app a join review r on a.App = r.App \
                      where r.Sentiment = \"Neutral\" \
                      group by a.Category \
                  ) \
                  select ng.Category, \
                         ng.negative_count as Count_Negative, \
                         po.positive_count as Count_Positive, \
                         nu.neutral_count as Count_Neutral \
                  from negative ng join positive po \
                        on ng.Category = po.Category \
                      join neutral nu \
                        on po.Category = nu.Category \
                  group by ng.Category;"
      register: mysql_output_2
    
    - name: Show result from query 2
      ansible.builtin.debug:
        msg: 
          - "Time to run: {{ mysql_output_2.delta }}"
          - "Output is: {{ mysql_output_2.stdout_lines }}"
    
    - name: Query 3
      shell: |
        mysql --defaults-extra-file="{{ work_dir }}/ansible/.my.cnf" \
              --local-infile=1 \
              -h "{{ mysql_host }}" \
              -D dep304_asm2 \
              -e "with price as ( \
                      select App, \
                             cast(replace(app.Price, '$', '') as float) as New_Price \
                      from app \
                  ) \
                  select a.Category, \
                         count(length(r.Translated_Review) - length(replace(r.Translated_Review, ' ', '')) + 1) as Word_Count, \
                         avg(p.New_Price) as AVG_Price \
                  from app a join review r on a.App = r.App \
                      join price p on a.App = p.App \
                  group by a.Category \
                  order by Word_Count desc \
                  limit 1;"
      register: mysql_output_3
    
    - name: Show result from query 3
      ansible.builtin.debug:
        msg: 
          - "Time to run: {{ mysql_output_3.delta }}"
          - "Output is: {{ mysql_output_3.stdout_lines }}"

    - name: Print output to file
      copy:
        content:
          - "Time to run query 1: {{ mysql_output_1.delta }}"
          - "Time to run query 2: {{ mysql_output_2.delta }}"
          - "Time to run query 3: {{ mysql_output_3.delta }}"
        dest: "{{ time_log_file }}"
